[{"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\daftar-bahan.js":"1","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\client.js":"2","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\index.js":"3","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\login.js":"4","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-grid.js":"5","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\numbers.js":"6","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\navbar.js":"7","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\receipt-view.js":"8","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\url.js":"9","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\reportWebVitals.js":"10","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-available.js":"11","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\mainpage.js":"12","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\chocolate-view.js":"13","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-list.js":"14","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\approvetable.js":"15","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\receipt-list.js":"16"},{"size":2225,"mtime":1606614118564,"results":"17","hashOfConfig":"18"},{"size":5007,"mtime":1606629577414,"results":"19","hashOfConfig":"18"},{"size":523,"mtime":1606557936293,"results":"20","hashOfConfig":"18"},{"size":1308,"mtime":1606533020080,"results":"21","hashOfConfig":"18"},{"size":2197,"mtime":1606630322564,"results":"22","hashOfConfig":"18"},{"size":427,"mtime":1606527551600,"results":"23","hashOfConfig":"18"},{"size":2224,"mtime":1606623079355,"results":"24","hashOfConfig":"18"},{"size":267,"mtime":1606446608740,"results":"25","hashOfConfig":"18"},{"size":136,"mtime":1606621483294,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1606351806445,"results":"27","hashOfConfig":"18"},{"size":600,"mtime":1606630210152,"results":"28","hashOfConfig":"18"},{"size":1398,"mtime":1606585561722,"results":"29","hashOfConfig":"18"},{"size":1131,"mtime":1606462292515,"results":"30","hashOfConfig":"18"},{"size":1877,"mtime":1606473522825,"results":"31","hashOfConfig":"18"},{"size":2322,"mtime":1606585561718,"results":"32","hashOfConfig":"18"},{"size":622,"mtime":1606446580249,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"msrqd5",{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\daftar-bahan.js",["71","72","73","74"],"import React, { Component } from 'react';\r\nimport {Button, Modal, Row, Col, Nav } from 'react-bootstrap';\r\nimport BuyPage from './buy-page';\r\nimport Navbar from './navbar';\r\n\r\nclass DaftarBahan extends Component{\r\n  constructor (){\r\n    super();\r\n    this.state = {\r\n      dataBahan :[]\r\n    }\r\n  }\r\n        componentDidMount(){\r\n          const urlFetch = fetch('http://localhost:3001/api/ingrid')\r\n          urlFetch.then( res => {\r\n             if(res.status === 200)\r\n                return res.json()   \r\n          }).then( resJson => {\r\n             this.setState({\r\n                 dataBahan: resJson\r\n             })\r\n          })\r\n       }\r\n    render(){\r\n        return(\r\n          <div>\r\n            <Navbar/>\r\n            <div class=\"table-responsive\">          \r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>No</th>\r\n                  <th>Nama Bahan</th>\r\n                  <th>Harga</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {\r\n                      this.state.dataBahan.map((y,index) => {\r\n                          return (\r\n                            <tr>\r\n                            <td>{index+1}</td>\r\n                            <td>{y.nama}</td>\r\n                            <td>{y.price_unit}</td>\r\n                            <td><ButtonBuy nama = {y.nama} idproduk = {y.harga}/></td>\r\n                            </tr>\r\n                          )\r\n                      })\r\n                  }\r\n              </tbody>\r\n            </table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DaftarBahan;\r\n\r\nclass ButtonBuy extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {modalShow: false};\r\n  }\r\n  idproduk = this.props.idproduk;\r\n  namaproduk = this.props.nama;\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Button onClick={() => this.setState({modalShow : !this.state.modalShow})}>\r\n          Beli\r\n        </Button>\r\n\r\n        <BuyPage show = {this.state.modalShow} onHide = {() => this.setState({modalShow : !this.state.modalShow})} idproduk = {this.idproduk} namaproduk = {this.namaproduk} />\r\n      </div>\r\n    );}\r\n}",["75","76"],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\client.js",["77","78","79","80","81","82","83"],"// import React from 'react'\r\n// var axios = require('axios');\r\n\r\n// var SoaMessage = `<soapenv:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n// <soapenv:Body>\r\n//   <ns1:updateBalance xmlns:ns1=\"http://jaxwsservice.codejava.net/\" xmlns:ns3=\"http://www.example.org/FactorySchema\" xmlns:ns4=\"http://codejava.net\">\r\n//   <UpdateBalance>\r\n//         </UpdateBalance>\r\n//   </ns1:updateBalance>\r\n// </soapenv:Body>\r\n// </soapenv:Envelope>`;\r\n\r\n// // var url = \"http://localhost:8001/MyApp2/ws/hello?wsdl\";\r\n\r\n// var config = {\r\n//     method: 'post',\r\n//     url: \"http://localhost:8001/MyApp2/ws/hello?wsdl\",\r\n//     headers: { \r\n//     //   'Content-MD5': 'text/xml', \r\n//       'Content-Type': 'text/xml',\r\n//     //   \"Access-Control-Allow-Origin\": \"*\",\r\n//     //     \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n//     },\r\n//     data : SoaMessage\r\n//   };\r\n// // var url = \"http://localhost:8001/MyApp2/ws/hello?wsdl\";\r\n\r\n// export default class Client{\r\n//     numbers(){\r\n//         // let result = new Promise(()=>{\r\n//             axios(config)\r\n//             .then(function (response) {\r\n//             console.log(JSON.stringify(response.data));\r\n//             })\r\n//             .catch(function (error) {\r\n//             console.log(error);\r\n//             });\r\n//             // var request = new XMLHttpRequest();\r\n//             // request.open(\"POST\",url,true);\r\n//             // console.log(\"2\");\r\n//             // request.onreadystatechange = () =>{\r\n//             //     if (request.readyState===4){\r\n//             //         var res = request.responseXML;\r\n//             //         res = res.getElementsByTagName(\"return\")[0].childNodes[0].data;\r\n//             //         console.log(res);\r\n\r\n//             //     }\r\n//             //     console.log(\"failes\");\r\n//             //     // let raw = request.responseText;\r\n//             //     // let objectified = JSON.parse(raw);\r\n//             //     // resolve(objectified);\r\n//             // }\r\n//         //     console.log(\"3\");\r\n//         //     request.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n// \t\t// request.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n// \t\t// request.setRequestHeader(\"Access-Control-Max-Age\", \"1800\");\r\n// \t\t// request.setRequestHeader(\"Access-Control-Allow-Headers\", \"content-type\");\r\n// \t\t// request.setRequestHeader(\"Access-Control-Allow-Methods\",\"PUT, POST, GET, DELETE, PATCH, OPTIONS\");\r\n//         //     request.send(SoaMessage);\r\n//         // });\r\n//     }\r\n// }\r\nimport React, { useCallback } from 'react'\r\nimport {Button, Modal, Row, Col, Nav } from 'react-bootstrap';\r\nimport ChocoAvailable from './choco-available';\r\nimport Navbar from './navbar';\r\nvar axios = require('axios');\r\n// import {SOAPDataSource} from \"apollo-datasource-soap\";\r\n\r\n\r\nvar SoaMessage = `<?xml version='1.0' encoding='UTF-8'?>\r\n<S:Envelope xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <S:Body>\r\n        <ns2:getChocoAvail xmlns:ns2=\"http://codejava.net/\">\r\n        </ns2:getChocoAvail>\r\n    </S:Body>\r\n</S:Envelope>`\r\n\r\nvar url = \"http://localhost:8001/myApp/ws/choco-avail\";\r\n\r\nexport default class Client extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={messages:[]}\r\n    }\r\n    componentDidMount(){\r\n      console.log(\"hello\")\r\n      var request = new XMLHttpRequest();\r\n      request.open(\"POST\",url,true);\r\n      request.onreadystatechange = function(res){\r\n          if (request.readyState===4){\r\n              res = request.responseXML;\r\n              console.log(res);\r\n                res = res.getElementsByTagName(\"return\")[0].childNodes[0];\r\n              console.log(res);\r\n              var res2;\r\n              res2 = request.responseXML;\r\n              console.log(res2);\r\n              res = res2.getElementsByTagName(\"return\")[0].childNodes[0].nodeValue;\r\n              this.setState({message: res});\r\n              var obj = JSON.parse(res)\r\n              console.log(obj.chocs)\r\n            this.setState({messages: obj.chocs});\r\n          }\r\n      }.bind(this);\r\n      console.log(this.state.message);\r\n      request.setRequestHeader(\"Content-type\",\"text/xml\")\r\n      console.log(\"1\");\r\n      request.send(SoaMessage);\r\n      // console.log(res);\r\n    }\r\n\r\n    render(){\r\n        // if(this.state.messages)\r\n        const chocolateAvailable = this.state.messages.map(\r\n            message => <ChocoAvailable key={message._id} message={message} />\r\n          )\r\n      \r\n          return(\r\n            <html>\r\n            <body>\r\n              <header>\r\n                <Navbar/>\r\n              </header>\r\n                    <div class=\"container\">\r\n                    <div class= \"row\">\r\n                        {chocolateAvailable}\r\n                    </div>\r\n                    </div>\r\n            </body>\r\n            </html>\r\n          )\r\n    }\r\n}\r\n\r\n","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\index.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\login.js",[],["84","85"],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-grid.js",["86"],"import React, { useCallback } from 'react'\r\nimport ChocoAvailable from './choco-available';\r\nimport Navbar from './navbar';\r\nimport url from './url'\r\n\r\nvar SoaMessage = `<?xml version='1.0' encoding='UTF-8'?>\r\n<S:Envelope xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <S:Body>\r\n        <ns2:getChocoAvail xmlns:ns2=\"http://codejava.net/\">\r\n        </ns2:getChocoAvail>\r\n    </S:Body>\r\n</S:Envelope>`\r\n\r\nvar urlChoc = url.url +\"choco-avail\";\r\n\r\nexport default class ChocoGrid extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={messages:[]}\r\n    }\r\n    componentDidMount(){\r\n      console.log(\"hello\")\r\n      var request = new XMLHttpRequest();\r\n      request.open(\"POST\",urlChoc,true);\r\n      request.onreadystatechange = function(res){\r\n          if (request.readyState===4){\r\n              res = request.responseXML;\r\n              console.log(res);\r\n                res = res.getElementsByTagName(\"return\")[0].childNodes[0];\r\n              console.log(res);\r\n              var res2;\r\n              res2 = request.responseXML;\r\n              console.log(res2);\r\n              res = res2.getElementsByTagName(\"return\")[0].childNodes[0].nodeValue;\r\n              this.setState({message: res});\r\n              var obj = JSON.parse(res)\r\n              console.log(obj.chocs)\r\n            this.setState({messages: obj.chocs});\r\n          }\r\n      }.bind(this);\r\n      console.log(this.state.message);\r\n      request.setRequestHeader(\"Content-type\",\"text/xml\")\r\n      console.log(\"1\");\r\n      request.send(SoaMessage);\r\n      // console.log(res);\r\n    }\r\n\r\n    render(){\r\n        // if(this.state.messages)\r\n        const chocolateAvailable = this.state.messages.map(\r\n            message => <ChocoAvailable key={message._id} message={message} />\r\n          )\r\n      \r\n          return(\r\n            \r\n            <div>\r\n              <header>\r\n                <Navbar/>\r\n              </header>\r\n                    <div className=\"container\">\r\n                    <div className= \"row\">\r\n                        {chocolateAvailable}\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n            \r\n          )\r\n    }\r\n}\r\n\r\n","D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\numbers.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\navbar.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\receipt-view.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\url.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\reportWebVitals.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-available.js",["87","88"],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\mainpage.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\chocolate-view.js",["89","90"],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\choco-list.js",[],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\approvetable.js",["91","92"],"D:\\semeste 5\\wbd\\tubes2\\willy-wangky-s-factory\\src\\receipt-list.js",[],{"ruleId":"93","severity":1,"message":"94","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":22},{"ruleId":"93","severity":1,"message":"97","line":2,"column":24,"nodeType":"95","messageId":"96","endLine":2,"endColumn":27},{"ruleId":"93","severity":1,"message":"98","line":2,"column":29,"nodeType":"95","messageId":"96","endLine":2,"endColumn":32},{"ruleId":"93","severity":1,"message":"99","line":2,"column":34,"nodeType":"95","messageId":"96","endLine":2,"endColumn":37},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"93","severity":1,"message":"104","line":63,"column":17,"nodeType":"95","messageId":"96","endLine":63,"endColumn":28},{"ruleId":"93","severity":1,"message":"105","line":64,"column":9,"nodeType":"95","messageId":"96","endLine":64,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":64,"column":17,"nodeType":"95","messageId":"96","endLine":64,"endColumn":22},{"ruleId":"93","severity":1,"message":"97","line":64,"column":24,"nodeType":"95","messageId":"96","endLine":64,"endColumn":27},{"ruleId":"93","severity":1,"message":"98","line":64,"column":29,"nodeType":"95","messageId":"96","endLine":64,"endColumn":32},{"ruleId":"93","severity":1,"message":"99","line":64,"column":34,"nodeType":"95","messageId":"96","endLine":64,"endColumn":37},{"ruleId":"93","severity":1,"message":"106","line":67,"column":5,"nodeType":"95","messageId":"96","endLine":67,"endColumn":10},{"ruleId":"100","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":28},{"ruleId":"93","severity":1,"message":"109","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"110","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"109","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":28,"column":7,"nodeType":"113","endLine":28,"endColumn":143},{"ruleId":"93","severity":1,"message":"114","line":23,"column":9,"nodeType":"95","messageId":"96","endLine":23,"endColumn":13},{"ruleId":"93","severity":1,"message":"115","line":24,"column":9,"nodeType":"95","messageId":"96","endLine":24,"endColumn":20},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'useCallback' is defined but never used.","'Button' is defined but never used.","'axios' is assigned a value but never used.",["116"],["117"],"'PropTypes' is defined but never used.","'ReceiptList' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'self' is assigned a value but never used.","'urlEndPoint' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]